{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","aboutText","placeholder","defaultProps","Title","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","split","map","currentValue","slice","join","joinedWords","reverse","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAGe,SAASA,EAAOC,GAC/B,OACA,qBAAKC,UAAU,gDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SACGF,EAAMG,QAET,wBAAQF,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BACxF,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAD1E,SAEE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,oBAIF,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,SACGF,EAAMM,iBAIb,uBAAML,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBG,KAAK,SAASG,YAAY,SAAS,aAAW,WACnF,wBAAQN,UAAU,0BAA0BG,KAAK,SAAjD,+BAeRL,EAAOS,aAAe,CACtBC,MAAO,iBACPH,UAAW,S,WC5CI,SAASI,EAASV,GACjC,IAmCA,EAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACA,qCACE,sBAAKZ,UAAU,YAAf,UACE,6BAAKD,EAAMc,UACX,qBAAKb,UAAU,OAAf,SACE,0BAAUA,UAAU,eAAec,MAAOH,EAAMI,SAV/B,SAACC,GACxBJ,EAAQI,EAAMC,OAAOH,QAS2DV,GAAG,QAAQc,KAAK,QAE5F,wBAAQlB,UAAU,uBAAuBmB,QA3CvB,WACtB,IAAIC,EAAUT,EAAKU,cACnBT,EAAQQ,IAyCJ,kCACA,wBAAQpB,UAAU,uBAAuBmB,QAvCtB,WACvB,IAAIC,EAAUT,EAAKW,cACnBV,EAAQQ,IAqCJ,kCACA,wBAAQpB,UAAU,uBAAuBmB,QAnCjB,WAC5B,IAAIC,EAAUT,EAAKY,MAAM,KAAKC,KAAI,SAACC,GAEnC,OADcA,EAAa,GAAGJ,cAAgBI,EAAaC,MAAM,MAGjEd,EAAQQ,EAAQO,KAAK,OA8BjB,qCACA,wBAAQ3B,UAAU,uBAAuBmB,QA5BlB,WAC3B,IAEIS,EAFYjB,EAAKY,MAAM,IACCM,QAAQ,IACNF,KAAK,IAEnCf,EADcgB,IAwBV,0BACA,wBAAQ5B,UAAU,uBAAuBmB,QArBpB,WAEzBP,EADc,KAoBV,2BAIF,sBAAKZ,UAAU,iBAAf,UACE,mDACA,kCAAKW,EAAKY,MAAM,KAAKO,OAArB,cAAwCnB,EAAKmB,OAA7C,iBACA,8BAAI,KAAQnB,EAAKY,MAAM,IAAIO,OAA3B,sBACA,yCACA,4BAAInB,UC7COoB,MAVf,WACE,OACE,qCACE,cAACjC,EAAD,CAAQI,MAAM,cACd,qBAAKF,UAAU,iBAAf,SACE,cAACS,EAAD,CAAUI,QAAQ,2CCGXmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.78787731.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Navbar(props) {\nreturn (\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"/\">\n      {props.title}\n    </a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n            Home\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/\">\n            {props.aboutText}\n          </a>\n        </li>\n      </ul>\n      <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  </div>\n</nav>\n);\n}\n\nNavbar.propTypes = {\ntitle: PropTypes.string.isRequired,\naboutText: PropTypes.string.isRequired,\n};\n\nNavbar.defaultProps = {\nTitle: \"Set title here\",\naboutText: \"About\",\n};","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\nconst handleUpClick = () => {\nlet newText = text.toUpperCase();\nsetText(newText);\n};\n\nconst handleLowClick = () => {\nlet newText = text.toLowerCase();\nsetText(newText);\n};\n\nconst handleSentenceClick = () => {\nlet newText = text.split(\" \").map((currentValue) => {\nlet newText = currentValue[0].toUpperCase() + currentValue.slice(1);\nreturn newText;\n});\nsetText(newText.join(\" \"));\n};\n\nconst handleReverseClick = () => {\nlet splitWord = text.split(\"\");\nlet reverseWord = splitWord.reverse(\"\");\nlet joinedWords = reverseWord.join(\"\");\nlet newText = joinedWords\nsetText(newText);\n};\n\nconst handleClearClick = () => {\nlet newText = \"\";\nsetText(newText);\n};\n\nconst handleOnChange = (event) => {\nsetText(event.target.value);\n};\n\nconst [text, setText] = useState(\"\");\nreturn (\n<>\n  <div className=\"container\">\n    <h1>{props.heading}</h1>\n    <div className=\"mb-3\">\n      <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\n    </div>\n    <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\n    <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\n    <button className=\"btn btn-primary mx-2\" onClick={handleSentenceClick}>Convert to Sentencecase</button>\n    <button className=\"btn btn-primary mx-2\" onClick={handleReverseClick}>Reverse Text</button>\n    <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\n\n\n  </div>\n  <div className=\"container my-3\">\n    <h2>Your Text Summary</h2>\n    <p> {text.split(\" \").length} words and {text.length} characters</p>\n    <p>{0.008 * text.split(\"\").length} minutes to read</p>\n    <h3>Preview</h3>\n    <p>{text}</p>\n  </div>\n\n</>\n);\n}","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar title=\"TextUtils\" />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Enter the Text to Analyze Below:\" />\n      </div>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}